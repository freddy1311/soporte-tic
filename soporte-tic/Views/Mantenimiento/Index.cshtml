@{
    ViewBag.Title = "Órdenes de Trabajo";
    ViewBag.pagetitle = "ODT's";
}

<div class="row" id="index-odt">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <div class="d-flex mb-3">
                    <div class="flex-grow-1">
                        <h4 class="card-title">Órdenes de Trabajo</h4>
                        <p class="card-title-desc mb-0">
                            Listado de órdenes de trabajo vigentes.
                        </p>
                        <p class="text-muted mt-1"><em>Total de ODT's': {{totalOrdenes}}</em></p>
                    </div>
                    <div class="flex-shrink-0">
                        <button class="btn btn-warning" title="Recargar órdenes de trabajo" v-on:click="reloadingOrdenes()">
                            <i class="mdi mdi-refresh"></i>
                        </button>
                        <button class="btn btn-primary" title="Crear nueva orden de trabajo" v-on:click="showCreateOrdenTrabajo()">
                            <i class="mdi mdi-plus"></i> Nuevo
                        </button>
                    </div>
                </div>
                <div id="tbl-ordenes" v-if="(ordenes.length > 0)">
                    <table id="dtOrdenes" class="table dt-responsive nowrap w-100">
                        <thead class="table-light">
                            <tr>
                                <th >No. ODT</th>
                                <th scope="col">Semana</th>
                                <th scope="col">F. Prevista</th>
                                <th scope="col">F. Ejecución</th>
                                <th scope="col">Tipo</th>
                                <th scope="col">Maquinaria</th>
                                <th scope="col">Responsable</th>
                                <th scope="col">Tareas</th>
                                <th scope="col">Estado</th>
                                <th scope="col" style="width: 120px; text-align: center;">Opciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="orden in ordenes">
                                <td>
                                    <small># {{orden.ortrNúmero}}</small>
                                </td>
                                <td>
                                    <small class="badge badge-soft-success">SEMANA: {{orden.ortrSemana}}</small>
                                </td>
                                <td>
                                    <small>{{formatFecha(orden.ortrFechaPrevistaInicio)}}</small><br />
                                    <small>{{formatFecha(orden.ortrFechaPrevistaFin)}}</small>
                                </td>
                                <td>
                                    <small v-if="(orden.ortrFechaEjecucionInicio)">{{orden.ortrFechaEjecucionInicio}}</small>
                                    <small v-if="(!orden.ortrFechaEjecucionInicio)">-----</small>
                                    <br />
                                    <small v-if="(orden.ortrFechaEjecucionFin)">{{orden.ortrFechaEjecucionFin}}</small>
                                    <small v-if="(!orden.ortrFechaEjecucionFin)">-----</small>
                                </td>
                                <td>
                                    <small class="badge badge-soft-info" v-if="(orden.ortrTipo == 1)">MECÁNICO</small>
                                    <small class="badge badge-soft-success" v-if="(orden.ortrTipo == 2)">ELÉCTRICO</small>
                                </td>
                                <td>
                                    <small>{{orden.maquNombreF}}</small><br />
                                    <small><em>{{orden.maquNombre}}</em></small>
                                </td>
                                <td>
                                    <small>{{orden.usuaResponsableNombre}}</small>
                                </td>
                                <td>
                                    {{orden.countTareas}}
                                </td>
                                <td>
                                    <small class="badge badge-soft-warning" v-if="(orden.ortrFechaEjecucionInicio)">EN PROCESO</small>
                                    <small class="badge badge-soft-info" v-if="(!orden.ortrFechaEjecucionInicio)">ASIGNADO</small>
                                </td>
                                <td style="text-align: center;">
                                    <a class="text-success mr-2" href="javascript:void(0);" title="Agregar tareas" v-on:click="addTareasOrdenTrabajo(orden)">
                                        <i class="mdi mdi-plus-box-multiple-outline"></i>
                                    </a>
                                    <a class="text-info mr-2" href="javascript:void(0);" title="Ver orden" v-on:click="showInfoOrdenTrabajo(orden)">
                                        <i class="mdi mdi-eye-outline"></i>
                                    </a>
                                    <a class="text-warning mr-2" href="javascript:void(0);" title="Actualizar orden" v-on:click="showUpdateOrdenTrabajo(orden.ortrCodigo)">
                                        <i class="mdi mdi-square-edit-outline"></i>
                                    </a>
                                    <a class="text-danger" href="javascript:void(0);" title="Eliminar orden" v-on:click="deleteOrdenTrabajo(orden.ortrCodigo)">
                                        <i class="mdi mdi-delete-outline"></i>
                                    </a>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@await Html.PartialAsync("~/Views/Shared/_modalStandard.cshtml")

@section scripts {
    <!-- Required datatable js -->
    <script src="~/assets/libs/datatables.net/js/jquery.dataTables.min.js"></script>
    <script src="~/assets/libs/datatables.net-bs4/js/dataTables.bootstrap4.min.js"></script>

    <!-- App js -->
    <script src="~/assets/js/app.js"></script>

    <script>
        var indexODT = new Vue({
            el: '#index-odt',
            data: {
                ordenes: [],
                totalOrdenes: 0,
                vmOrdenTrabajo: {},
                codOrdenSelected: 0
            },
            mounted: function () {
                var vm = this;
                this.$on('responseModel', (resp) => {
                    
                    if (resp.response) {
                        $('#standardModal').hide();
                        $('#standardModal').modal('hide');

                        switch (resp.result) {
                            case 1:
                                //odts
                                vm.getOrdenesTrabajo();
                                break;
                            case 2:
                                break;
                        }
                    }
                });

                window.onload = () => {
                    this.getOrdenesTrabajo();
                };
            },
            created: function () {
                this.getOrdenesTrabajo();
            },
            methods: {
                blockUI: function (msg) {
                    $(function () {
                        //#region block UI
                        $('#index-odt').block({
                            message: msg,
                            css: {
                                backgroundColor: '#36404a',
                                color: '#fff',
                                height: 40,
                                paddingTop: 10,
                                paddingLeft: 10,
                                paddingRight: 10,
                                borderRadius: 7,
                                border: '0',
                                opacity: 0.5,
                                zIndex: 9999999,
                                cursor: 'wait'
                            },
                        });
                        //#endregion
                    });
                },
                unblockUI: function () {
                    $(function () {
                        setTimeout(() => {
                            $('#index-odt').unblock();
                        }, 1000);
                    });
                },
                showAlert: function (title, msg, icon) {

                    const typeIcon = icon;

                    Swal.fire(
                        {
                            title: title,
                            text: msg,
                            icon: typeIcon,
                            confirmButtonColor: '#0576b9'
                        }
                    );
                },
                initTableOrdenes: function () {
                    setTimeout(() => {
                        $("#dtOrdenes").DataTable({
                            "language": {
                                "zeroRecords": "No se encontraron órdenes disponibles!",
                                "info": "Mostrando pag. _PAGE_ de _PAGES_",
                                "infoEmpty": "No se encontró coincidencias!",
                                "infoFiltered": "(filtrado de _MAX_ registros en total)",
                                "search": "Buscar:",
                                "paginate": {
                                    "previous": "<i class='mdi mdi-chevron-left'>",
                                    "next": "<i class='mdi mdi-chevron-right'>"
                                },
                                "lengthMenu": "Mostrar <select class=\"custom-select custom-select-sm ml-1 mr-1\"><option value='10'>10</option><option value='20'>20</option><option value='-1'>Todas</option></select> órdenes"
                            },
                            pageLength: 10,
                            columns: [
                                { orderable: !0 }, { orderable: !0 }, { orderable: !0 }, 
                                { orderable: !0 }, { orderable: !0 }, { orderable: !0 },
                                { orderable: !0 }, { orderable: !0 }, { orderable: !0 },
                                { orderable: !0 }
                            ],
                            responsive: false,
                            destroy: true,
                            retrieve: true,
                            autoFill: true,
                            order: [],
                            drawCallback: function () {
                                $(".dataTables_paginate > .pagination").addClass("pagination-rounded");
                                $(".dataTables_paginate ").addClass('float-end');
                            }
                        });
                    }, 500);
                },
                formatFecha: function (fecha) {
                    const d = new Date(fecha);
                    const year = d.getFullYear();
                    const month = ('0' + (d.getMonth() + 1)).slice(-2);
                    const day = ('0' + d.getDate()).slice(-2);
                    return `${year}-${month}-${day}`;
                },
                getOrdenesTrabajo: function () {
                    let url = '/Mantenimiento/GetListODTSOpen/';

                    this.blockUI('Cargando órdenes de trabajo...');
                    this.ordenes = [];
                    this.totalOrdenes = 0;

                    axios.get(url).
                        then((response) => {
                            let rm = response.data;

                            if (rm.response) {
                                this.ordenes = rm.result;
                                this.totalOrdenes = this.ordenes.length;
                            } else {
                                this.ordenes = [];
                                this.totalOrdenes = 0;
                            }

                            this.initTableOrdenes();

                            this.unblockUI();
                        }).
                        catch((error) => {
                            console.log('Error en getConfiguracionesODT: ' + error);
                            this.unblockUI();
                            this.ordenes = [];
                            this.totalOrdenes = 0;
                        });
                },
                reloadingOrdenes: function () {
                    this.getOrdenesTrabajo();
                },
                showCreateOrdenTrabajo: function () {
                    let url = '/Mantenimiento/CreateOrdenTrabajo/';

                    axios.get(url).
                        then((response) => {
                            $('.modal').html(response.data);
                            $('#standardModal').modal('show');
                        }).
                        catch((error) => {
                            console.log('Error en showCreateOrdenTrabajo: ' + error);
                        });
                },
                showUpdateOrdenTrabajo: function (codOrden) {
                    let url = '/Mantenimiento/UpdateOrdenTrabajo/';

                    axios.get(url, {params: {codOrden: codOrden}}).
                        then((response) => {
                            $('.modal').html(response.data);
                            $('#standardModal').modal('show');
                        }).
                        catch((error) => {
                            console.log('Error en showUpdateOrdenTrabajo: ' + error);
                        });
                },
                deleteOrdenTrabajo: function (codOrden) {
                    if (codOrden != 0) {
                        Swal.fire({
                            title: 'Está seguro de querer eliminar el usuario seleccionado?',
                            showCancelButton: true,
                            confirmButtonText: 'Sí',
                            confirmButtonColor: '#d65530',
                            icon: 'question'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                let url = '/Mantenimiento/DeleteOrdenTrabajo/';
                                console.log('código orden trabajo: ' + codOrden);
                                this.blockUI('Eliminando orden de trabajo...');

                                axios.get(url, { params: { codOrden: codOrden } }).
                                    then((response) => {
                                        let rm = response.data;

                                        if (rm.response) {
                                            this.showAlert(rm.title, rm.message, 'success');
                                            this.getOrdenesTrabajo();
                                        } else {
                                            this.showAlert(rm.title, rm.message, 'warning');
                                        }

                                        this.unblockUI();
                                    }).
                                    catch((error) => {
                                        this.unblockUI();
                                        console.log('Error en deleteOrdenTrabajo: ' + error);
                                    });
                            }
                        });
                    } else {
                        this.showAlert('Validación', 'No se detectó una orden de trabajo válida para eliminar!.', 'warning');
                    }
                },
                showInfoOrdenTrabajo: function (orden) {
                    if (orden != null) {
                        const codigoOrden = orden.ortrCodigo;
                        window.location.href = `/Mantenimiento/ShowOrdenTrabajo?codOrden=${codigoOrden}`;
                    } else {
                        this.showAlert('Validación', 'No se detectó una orden de trabajo válida para mostrar!.', 'warning');
                    }
                },
                addTareasOrdenTrabajo: function (orden) {
                    let url = '/Mantenimiento/AddTareasOrdenTrabajo/';

                    axios.get(url, {params: {codOrden: orden.ortrCodigo}}).
                        then((response) => {
                            $('.modal').html(response.data);
                            $('#standardModal').modal('show');
                        }).
                        catch((error) => {
                            console.log('Error en showUpdateOrdenTrabajo: ' + error);
                        });
                }

            }
        });
    </script>
}